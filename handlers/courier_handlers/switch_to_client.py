from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from database.get_to_db import get_courier, get_user
from handlers.user_handlers import main_menu_user
from loader import bot, dp
from states.user_states import UserRegistrationState

router = Router()
dp.include_router(router)

@router.callback_query(F.data == 'switch_to_client')
async def process_callback_switch_to_passenger(call: CallbackQuery, state: FSMContext):
    await call.answer()
    user_id = call.from_user.id
    courier = await get_courier(user_id)

    if courier:
        courier.is_active = False
        courier.save()

    user = await get_user(user_id)
    if user:
        # –µ—Å–ª–∏ –¥–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        await call.message.edit_text('üîÄ –í—ã —Å–º–µ–Ω–∏–ª–∏ —Ä–æ–ª—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')
        await main_menu_user.main_menu(call.message)
    else:
        # –µ—Å–ª–∏ –Ω–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞
        await call.message.edit_text('üôã‚Äç‚ôÇÔ∏è–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞!\n\n'
                                    'üîÜ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:')
        await state.set_state(UserRegistrationState.name)
