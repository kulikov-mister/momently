from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from Filter.Filter import IsNotCommandInStates, LinkNumberFilter
from database.delite_from_db import delete_sent_messages
from database.get_to_db import get_order_by_id, get_courier, get_sent_messages
from handlers.user_handlers import main_menu_user
from keyboards.inline.orders_inline.user_order_inline.comment import comment_keyboard
from keyboards.reply.reply_menu_courier import courier_main_menu_keyboard
from loader import dp, bot
from states.order_states import OrderStatus
from config_data.config import CURRENCY

router = Router()
dp.include_router(router)

# –ø—Ä–∏–Ω—è—Ç–∏–µ —Ü–µ–Ω—ã –∏ –∑–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
@router.callback_query(F.data.startswith('acceptprice_'))
async def process_accept_price_callback(call: CallbackQuery):
    _, order_id, courier_id, price = call.data.split("_", 3)
    order_id = int(order_id)
    courier_id = int(courier_id)
    user_id = call.from_user.id

    order = get_order_by_id(order_id)
    if order is None:
        await call.message.answer( "üòî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–∫–∞–∑.")
        return

    courier = await get_courier(courier_id)
    if courier is None:
        await call.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    order.courier_id = courier_id
    order.cost = price  # assign the proposed price to the order
    order.status = OrderStatus.ACCEPTED
    order.save()

    await call.message.edit_text(f"‚úÖ –í—ã –ø—Ä–∏–Ω—è–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω–µ {order.cost} {CURRENCY} –æ—Ç –∫—É—Ä—å–µ—Ä–∞ {courier.name}!")

    await main_menu_user.main_menu(call.message)

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä—É
    await bot.send_message(
        courier_id, 
        f"ü•≥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω–µ {order.cost} {CURRENCY}!\n\n"
        f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ", 
        reply_markup=courier_main_menu_keyboard())

    sent_messages = get_sent_messages(order.id)
    for user_id, message_id in sent_messages:
        try:
            await bot.delete_message(user_id, message_id)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
    delete_sent_messages(order.id)
    await call.answer()


# –ø—Ä–∏–µ–º —Ü–µ–Ω—ã –∏ –∑–∞–ø—Ä–æ—Å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—è
@router.callback_query(F.data.startswith('declineprice'))
async def process_request_coment_price_callback(call: CallbackQuery, state: FSMContext):
    _, order_id, courier_id, price = call.data.split("_", 3)

    await state.update_data(order_id=order_id, courier_id=courier_id, price=price)    
    await call.message.edit_reply_markup(reply_markup=ReplyKeyboardRemove()) #—á–∏—Å—Ç–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await call.message.answer("‚úçÔ∏è –ñ–µ–ª–∞–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø–æ–≤–æ–¥—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? :",
                              reply_markup=comment_keyboard())
    await call.answer()
    await state.set_state(OrderStatus.PRICE_CANCELED)
    
# –ø—Ä–∏—è–Ω—Ç–∏–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä—É
@router.message(IsNotCommandInStates(OrderStatus.PRICE_CANCELED), LinkNumberFilter())
async def process_decline_price_comment(message: Message, state: FSMContext):
    comment = message.text
    # –ü–æ–ª—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    order_id = data.get('order_id')
    courier_id = data.get('courier_id')
    price = data.get('price')
    
    order = get_order_by_id(order_id)
    if order is None:
        await message.answer("üòî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–∫–∞–∑.")
        return

    courier = await get_courier(courier_id)
    if courier is None:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    await message.answer(
        text=f'üò§ –í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ <b>{courier.name}</b> —Å —Ü–µ–Ω–æ–π <b>{price} {CURRENCY}</b>.',
        reply_markup=None)

    await bot.send_message(
        courier_id,
        text=f'''üòî –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ c —Ü–µ–Ω–æ–π <b>{price}</b> –ø–æ –∑–∞–∫–∞–∑—É <b>{order_id}</b> –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.\n\n
                 <b>–ö–ª–∏–µ–Ω—Ç —É–∫–∞–∑–∞–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>.{comment}\n\n
                 –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ —Ç–æ–ª—å–∫–æ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –∫–ª–∏–µ–Ω—Ç–∞!''')
    
