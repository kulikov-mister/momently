from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from Filter.Filter import IsNotCommand, LinkNumberFilter
from database.add_to_db import save_sent_messages
from database.get_to_db import get_order_by_id, get_courier
from handlers.default_handlers.start import start
from keyboards.inline.orders_inline.user_order_inline.comment import comment_keyboard
from keyboards.inline.courier_inline.accept_the_order import order_acceptance_keyboard_without_propose_price
from keyboards.inline.orders_inline.user_order_inline.accept_or_decline_price import accept_or_decline_price_keyboard
from loader import dp, bot
from states.order_states import ProposePriceState
from config_data.config import CURRENCY

router = Router()
dp.include_router(router)

# –∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–Ω—É
@router.callback_query(F.data.startswith('order_propose_price'))
async def process_propose_price_callback(call: CallbackQuery, state: FSMContext):
    order_id = call.data.split('_')[-1]
    await state.set_state(ProposePriceState.price)
    await state.update_data(order_id=order_id)

    order = get_order_by_id(order_id)
    
    keyboard = order_acceptance_keyboard_without_propose_price(order)
    await call.message.edit_reply_markup(reply_markup=keyboard)

    await bot.send_message(call.from_user.id, 'üí∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ü–µ–Ω—É:')
    await call.answer()


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã
@router.message(IsNotCommand(), ProposePriceState.price)
async def process_propose_price_request_coment(message: Message, state: FSMContext):
    message_text = message.text
    if message_text.startswith('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'):
        await start(message, state)
        return

    if message_text.replace('.', '', 1).isdigit() and message_text.count('.') <= 1:
        price = float(message_text)
        if price <= 0:
            await message.answer("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            return
        # –î–∞–ª–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ü–µ–Ω—ã
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ü–µ–Ω—ã.")
        return
    
    await state.update_data(price=price)
    await message.answer("‚úçÔ∏è –ñ–µ–ª–∞–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø–æ–≤–æ–¥—É –í–∞—à–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? \n\n<i>–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞—Ç—å —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - —ç—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —à–∞–Ω—Å—ã –Ω–∞ —Å–æ–≥–ª–∞—Å–∏–µ.</i>",
                         reply_markup=comment_keyboard())
    await state.set_state(ProposePriceState.coment)

# –ø—Ä–µ–¥–ª–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ü–µ–Ω–µ
@router.message(IsNotCommand(), ProposePriceState.coment, LinkNumberFilter())
async def process_propose_price(message: Message, state: FSMContext):
    courier_id = message.from_user.id
    coment = message.text
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ state
    data = await state.get_data()
    order_id = data.get('order_id')
    price = str(data.get('price'))
    
    order = get_order_by_id(order_id)
    courier = await get_courier(courier_id)
    pro_status = " | PRO üèÖ" if courier.is_pro else ""
    
    if courier is None:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    await bot.send_message(message.from_user.id, f"‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã {price} {CURRENCY} —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º:\n<i>{coment}</i>\n\n–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É")
    message = await bot.send_message(order.user_id, f'üîî –ö—É—Ä—å–µ—Ä <b>{courier.name}{pro_status}</b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ü–µ–Ω—É <b>{price}</b>{CURRENCY} –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑',
                           reply_markup=accept_or_decline_price_keyboard(order, courier_id, price))

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    save_sent_messages(order.id, [(order.user_id, message.message_id)])
