from aiogram import F, Router
from aiogram.types import CallbackQuery, InlineKeyboardMarkup
from keyboards.inline_builder import inline_builder
from database.database import Courier
from database.get_to_db import get_all_couriers
from loader import bot, dp

router = Router()
dp.include_router(router)

def generate_keyboard():
    couriers = get_all_couriers()
    buttons_data = [
        {"text": f"{'üü•' if courier.admin_deactivated else 'üü©'} {courier.name}", 
         "callback_data": f"toggle_{courier.user_id}"}
        for courier in couriers
    ]

    return inline_builder(buttons_data)

def generate_courier_info_keyboard(courier_id: int, admin_deactivated: bool, is_pro: bool) -> InlineKeyboardMarkup:
    buttons_data = []

    if admin_deactivated:
        buttons_data.append({"text": "‚ú≥Ô∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", "callback_data": f"activate_{courier_id}"})
    else:
        buttons_data.append({"text": "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", "callback_data": f"deactivate_{courier_id}"})

    # –ü—Ä–∏–º–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ PRO, –µ—Å–ª–∏ –æ–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    # if is_pro:
    #     buttons_data.append({"text": "üö´ –°–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å PRO", "callback_data": f"unpro_{courier_id}"})
    # else:
    #     buttons_data.append({"text": "üèÖ –ù–∞–∑–Ω–∞—á–∏—Ç—å PRO", "callback_data": f"pro_{courier_id}"})

    return inline_builder(buttons_data)


@router.callback_query(F.data == 'toggle_driver')
async def toggle_driver_activation(call: CallbackQuery):
    await call.answer()
    keyboard = generate_keyboard()
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:",
                           reply_markup=keyboard)


@router.callback_query(F.data.startswith('toggle_'))
async def process_courier_toggle(call: CallbackQuery):
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—å–µ—Ä–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏."""
    await call.answer()
    courier_id = int(call.data.split('_')[1])
    courier = Courier.get(Courier.user_id == courier_id)

    courier_info = generate_courier_info(courier)
    keyboard = generate_courier_info_keyboard(courier_id, courier.admin_deactivated, courier.is_pro)

    await call.message.edit_text(text=courier_info,
                                 reply_markup=keyboard)


@router.callback_query(F.data.startswith('activate_'))
async def process_courier_activation(call: CallbackQuery):
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫—É—Ä—å–µ—Ä–∞."""
    await call.answer()
    courier_id = int(call.data.split('_')[1])
    courier = Courier.get(Courier.user_id == courier_id)
    courier.admin_deactivated = False
    courier.save()

    courier_info = generate_courier_info(courier)
    keyboard = generate_courier_info_keyboard(courier_id, courier.admin_deactivated, courier.is_pro)

    await call.message.edit_text(text=courier_info, reply_markup=keyboard)
    await bot.send_message(courier_id, "ü•≥ –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n\n"
                                       "–¢–µ–ø–µ—Ä—å –≤—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É")




@router.callback_query(F.data.startswith('deactivate_'))
async def process_courier_deactivation(call: CallbackQuery):
    """–î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫—É—Ä—å–µ—Ä–∞."""
    await call.answer()
    courier_id = int(call.data.split('_')[1])
    courier = Courier.get(Courier.user_id == courier_id)
    courier.admin_deactivated = True
    courier.save()

    courier_info = generate_courier_info(courier)
    keyboard = generate_courier_info_keyboard(courier_id, courier.admin_deactivated, courier.is_pro)

    await call.message.edit_text(text=courier_info,
                                 reply_markup=keyboard)

    await bot.send_message(courier_id, "‚ùå –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n\n"
                                       "–í—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É")


@router.callback_query(F.data.startswith('pro_'))
async def give_pro_status(call: CallbackQuery):
    """–ù–∞–∑–Ω–∞—á–∞–µ—Ç –∫—É—Ä—å–µ—Ä—É —Å—Ç–∞—Ç—É—Å PRO."""
    await call.answer()
    courier_id = int(call.data.split('_')[1])
    courier = Courier.get(Courier.user_id == courier_id)
    courier.is_pro = True
    courier.save()

    courier_info = generate_courier_info(courier)
    keyboard = generate_courier_info_keyboard(courier_id, courier.admin_deactivated, courier.is_pro)

    await call.message.edit_text(text=courier_info,
                                 reply_markup=keyboard)
    await bot.send_message(courier_id, 'ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –ø—Ä–∏—Å–≤–æ–µ–Ω —Å—Ç–∞—Ç—É—Å üèÖ <b>PRO</b>')


@router.callback_query(F.data.startswith('unpro_'))
async def remove_pro_status(call: CallbackQuery):
    """–£–±–∏—Ä–∞–µ—Ç —É –∫—É—Ä—å–µ—Ä–∞ —Å—Ç–∞—Ç—É—Å PRO."""
    await call.answer()
    courier_id = int(call.data.split('_')[1])
    courier = Courier.get(Courier.user_id == courier_id)
    courier.is_pro = False
    courier.save()

    courier_info = generate_courier_info(courier)
    keyboard = generate_courier_info_keyboard(courier_id, courier.admin_deactivated, courier.is_pro)

    await call.message.edit_text(text=courier_info,
                                reply_markup=keyboard)

    await bot.send_message(courier_id, 'üòî –í–∞—à —Å—Ç–∞—Ç—É—Å üèÖ <b>PRO</b> –æ—Ç–∫–ª—é—á—ë–Ω')


def generate_courier_info(courier: Courier) -> str:
    # pro_status = "üèÖ PRO" if courier.is_pro else "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π"
    taxi_status = "üü•" if courier.admin_deactivated else "üü©"
    info_text = (f"üë§ <b>–ò–º—è:</b> {courier.name}\n\n"
                 f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {courier.phone}\n\n"
                 f"‚≠êÔ∏è <b>–†–µ–π—Ç–∏–Ω–≥:</b> {courier.rating}\n\n"
                 # f"üèÖ <b>–°—Ç–∞—Ç—É—Å:</b> {pro_status}\n\n"
                 f"{taxi_status} <b>–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b> {'–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' if not courier.admin_deactivated else '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}")
    return info_text
